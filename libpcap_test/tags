!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DestMac	demo3.c	/^    u_char DestMac[6];$/;"	m	struct:__anon1	file:
ETHER_ADDR_LEN	demo10.h	37;"	d
ETHHEADER	demo3.c	/^}ETHHEADER;$/;"	t	typeref:struct:__anon1	file:
Ethernet_head_t	demo10.h	/^typedef struct Ethernet_head_t{$/;"	s
Ethernet_head_t	demo10.h	/^}Ethernet_head_t;$/;"	t	typeref:struct:Ethernet_head_t
Etype	demo3.c	/^    u_char Etype[2];$/;"	m	struct:__anon1	file:
HEAD	demo10.h	/^}HEAD;$/;"	t	typeref:struct:Package_Head
IPHEADER	demo3.c	/^}IPHEADER;$/;"	t	typeref:struct:__anon2	file:
IP_DF	demo10.h	17;"	d
IP_HL	demo10.h	21;"	d
IP_MF	demo10.h	18;"	d
IP_OFFMASK	demo10.h	19;"	d
IP_RF	demo10.h	16;"	d
IP_V	demo10.h	22;"	d
IP_head_t	demo10.h	/^typedef struct IP_head_t{$/;"	s
IP_head_t	demo10.h	/^}IP_head_t;$/;"	t	typeref:struct:IP_head_t
MAX_PACKET_SIZE	demo7.cpp	11;"	d	file:
Package_Head	demo10.h	/^typedef struct Package_Head$/;"	s
Proto	demo3.c	/^char *Proto[]={$/;"	v
SrcMac	demo3.c	/^    u_char SrcMac[6];$/;"	m	struct:__anon1	file:
TCP_Head_t	demo10.h	/^struct TCP_Head_t{$/;"	s
TCP_Head_t	demo10.h	/^}TCP_Head_t;$/;"	v	typeref:struct:TCP_Head_t
TH_ACK	demo10.h	30;"	d
TH_CWR	demo10.h	33;"	d
TH_ECE	demo10.h	32;"	d
TH_FIN	demo10.h	26;"	d
TH_FLAGS	demo10.h	24;"	d
TH_OFF	demo10.h	35;"	d
TH_PUSH	demo10.h	29;"	d
TH_RST	demo10.h	28;"	d
TH_SYN	demo10.h	27;"	d
TH_URG	demo10.h	31;"	d
_DEMO10_H	demo10.h	9;"	d
a	demo10.h	/^    int a;$/;"	m	struct:Ethernet_head_t
acknowledgenum	demo7.cpp	/^           unsigned int acknowledgenum;$/;"	m	struct:tcp_header	file:
arp_packet_callback	demo11.c	/^void arp_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
arp_packet_callback	demo6.c	/^void arp_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
byte1	demo7.cpp	/^         u_char byte1;$/;"	m	struct:ip_address	file:
byte2	demo7.cpp	/^         u_char byte2;$/;"	m	struct:ip_address	file:
byte3	demo7.cpp	/^         u_char byte3;$/;"	m	struct:ip_address	file:
byte4	demo7.cpp	/^         u_char byte4;$/;"	m	struct:ip_address	file:
capture_packet1	demo2.c	/^void capture_packet1(pcap_t* device)$/;"	f
capture_packet1	demo8.c	/^void capture_packet1(pcap_t* device)$/;"	f
capture_packet2	demo2.c	/^void capture_packet2(pcap_t* device)$/;"	f
capture_packet2	demo8.c	/^void capture_packet2(pcap_t* device)$/;"	f
checksum	demo3.c	/^    int checksum:16;$/;"	m	struct:__anon2	file:
checksum	demo7.cpp	/^            u_short checksum;$/;"	m	struct:udp_header	file:
checksum	demo7.cpp	/^           u_short checksum;$/;"	m	struct:tcp_header	file:
cket_callback	demo6.c	/^void cket_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
crc	demo7.cpp	/^          u_short crc;$/;"	m	struct:ip_header	file:
daddr	demo7.cpp	/^          ip_address daddr;$/;"	m	struct:ip_header	file:
destIP	demo3.c	/^    u_char destIP[4];$/;"	m	struct:__anon2	file:
destport	demo7.cpp	/^            u_short destport;$/;"	m	struct:udp_header	file:
destport	demo7.cpp	/^           u_short destport;$/;"	m	struct:tcp_header	file:
dstmacaddress	demo7.cpp	/^    u_char dstmacaddress[6];$/;"	m	struct:mac_header	file:
ether_dst_mac	demo10.h	/^    u_char ether_dst_mac[ETHER_ADDR_LEN]; \/* 目标主机 mac 地址 *\/$/;"	m	struct:Ethernet_head_t
ether_src_mac	demo10.h	/^    u_char ether_src_mac[ETHER_ADDR_LEN]; \/* 源主机 mac 地址 *\/$/;"	m	struct:Ethernet_head_t
ether_type	demo10.h	/^    u_short ether_type; \/* 以太网类型：IP? ARP? RARP? etc *\/$/;"	m	struct:Ethernet_head_t
ethernet_packet_callback	demo11.c	/^void ethernet_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
ethernet_packet_callback	demo6.c	/^void ethernet_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
flags	demo3.c	/^    int flags:16;$/;"	m	struct:__anon2	file:
flags_fo	demo7.cpp	/^          u_short flags_fo;$/;"	m	struct:ip_header	file:
getPacket	demo10.c	/^void getPacket(u_char * arg, const struct pcap_pkthdr * pkthdr, const u_char * packet)  $/;"	f
getPacket	demo2.c	/^void getPacket(u_char * arg, const struct pcap_pkthdr * pkthdr, const u_char * packet)$/;"	f
getPacket	demo5.c	/^void getPacket(u_char * arg, const struct pcap_pkthdr * pkthdr, const u_char * packet)  $/;"	f
getPacket	demo8.c	/^void getPacket(u_char * arg, const struct pcap_pkthdr * pkthdr, const u_char * packet)$/;"	f
getPacket	demo9.c	/^void getPacket(u_char * arg, const struct pcap_pkthdr * pkthdr, const u_char * packet)  $/;"	f
header_len	demo3.c	/^    int header_len:4;$/;"	m	struct:__anon2	file:
headerlenandflag	demo7.cpp	/^           u_short headerlenandflag;$/;"	m	struct:tcp_header	file:
ident	demo3.c	/^    int ident:16;$/;"	m	struct:__anon2	file:
identification	demo7.cpp	/^          u_short identification;$/;"	m	struct:ip_header	file:
ip_address	demo7.cpp	/^     typedef struct ip_address$/;"	s	file:
ip_address	demo7.cpp	/^     }ip_address;$/;"	t	typeref:struct:ip_address	file:
ip_analyse	demo7.cpp	/^         void ip_analyse(u_char *argument, const struct pcap_pkthdr *packet_header, const u_char *packet_content)$/;"	f
ip_dst	demo10.h	/^    struct in_addr ip_dst; \/* 目标地址 *\/$/;"	m	struct:IP_head_t	typeref:struct:IP_head_t::in_addr
ip_head	demo10.h	/^   IP_head_t       ip_head;   \/* ip 数据报头部 *\/$/;"	m	struct:Package_Head
ip_header	demo7.cpp	/^      typedef struct ip_header$/;"	s	file:
ip_header	demo7.cpp	/^      }ip_header;$/;"	t	typeref:struct:ip_header	file:
ip_id	demo10.h	/^    u_short ip_id;      \/* 标识 *\/$/;"	m	struct:IP_head_t
ip_len	demo10.h	/^    u_short ip_len;     \/* 总长度 *\/$/;"	m	struct:IP_head_t
ip_off	demo10.h	/^    u_short ip_off;     \/* 片偏移*\/$/;"	m	struct:IP_head_t
ip_p	demo10.h	/^    u_char ip_p;        \/* 协议类型 *\/$/;"	m	struct:IP_head_t
ip_packet_callback	demo11.c	/^void ip_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
ip_packet_callback	demo6.c	/^void ip_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
ip_src	demo10.h	/^    struct in_addr ip_src; \/* 源地址 *\/$/;"	m	struct:IP_head_t	typeref:struct:IP_head_t::in_addr
ip_sum	demo10.h	/^    u_short ip_sum;     \/* 校验和 *\/$/;"	m	struct:IP_head_t
ip_tos	demo10.h	/^    u_char ip_tos;      \/* 服务类型 *\/$/;"	m	struct:IP_head_t
ip_ttl	demo10.h	/^    u_char ip_ttl;      \/* 生存周期 *\/$/;"	m	struct:IP_head_t
ip_ver_len	demo10.h	/^    u_char ip_ver_len;      \/* 版本和头部长度 *\/$/;"	m	struct:IP_head_t
length	demo7.cpp	/^            u_short length;$/;"	m	struct:udp_header	file:
mac_head	demo10.h	/^   Ethernet_Head_t mac_head;  \/* 以太网帧头部 *\/     $/;"	m	struct:Package_Head
mac_header	demo7.cpp	/^typedef struct mac_header$/;"	s	file:
mac_header	demo7.cpp	/^}mac_header;$/;"	t	typeref:struct:mac_header	file:
main	capture_package.c	/^int main(void)$/;"	f
main	demo.c	/^int main(int argc, char **argv)$/;"	f
main	demo1.c	/^int main(void)$/;"	f
main	demo10.c	/^int main(void)$/;"	f
main	demo11.c	/^int main(){  $/;"	f
main	demo2.c	/^int main()$/;"	f
main	demo3.c	/^int main(int argc, char **argv)$/;"	f
main	demo4.c	/^int main(int argc, char *argv[])  $/;"	f
main	demo5.c	/^int main()  $/;"	f
main	demo6.c	/^int main(){  $/;"	f
main	demo7.cpp	/^int main()$/;"	f
main	demo8.c	/^int main()$/;"	f
main	demo9.c	/^int main()  $/;"	f
pcap_handle	demo3.c	/^void pcap_handle(u_char* user,const struct pcap_pkthdr* header,const u_char* pkt_data)$/;"	f
proto	demo3.c	/^    u_char proto:8;$/;"	m	struct:__anon2	file:
proto	demo7.cpp	/^          u_char proto;$/;"	m	struct:ip_header	file:
saddr	demo7.cpp	/^          ip_address saddr;$/;"	m	struct:ip_header	file:
sequnum	demo7.cpp	/^           unsigned int sequnum;$/;"	m	struct:tcp_header	file:
show_ip_mask	capture_package.c	/^void show_ip_mask(char *dev)$/;"	f
sourceIP	demo3.c	/^    u_char sourceIP[4];$/;"	m	struct:__anon2	file:
sourport	demo7.cpp	/^            u_short sourport;$/;"	m	struct:udp_header	file:
sourport	demo7.cpp	/^           u_short sourport;$/;"	m	struct:tcp_header	file:
srcmacaddress	demo7.cpp	/^    u_char srcmacaddress[6];$/;"	m	struct:mac_header	file:
tcp_head	demo10.h	/^   TCP_Head_t      tcp_head;  \/* tcp 数据报头细信息 *\/$/;"	m	struct:Package_Head
tcp_header	demo7.cpp	/^       typedef struct tcp_header$/;"	s	file:
tcp_header	demo7.cpp	/^       }tcp_header;$/;"	t	typeref:struct:tcp_header	file:
tcp_packet_callback	demo11.c	/^void tcp_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
tcp_packet_callback	demo6.c	/^void tcp_packet_callback(unsigned char *argument,const struct pcap_pkthdr* pcap_header,const unsigned char *packet_content) {  $/;"	f
tcp_seq	demo10.h	/^typedef u_int tcp_seq;$/;"	t
th_ack	demo10.h	/^    tcp_seq th_ack;     \/* 确认号 *\/$/;"	m	struct:TCP_Head_t
th_dport	demo10.h	/^    u_short th_dport;   \/* 目的端口 *\/$/;"	m	struct:TCP_Head_t
th_flags	demo10.h	/^    u_char th_flags;    \/* 标识 TCP 控制不同的消息 *\/$/;"	m	struct:TCP_Head_t
th_offx2	demo10.h	/^    u_char th_offx2;    \/* 数据偏移（4 bit ),保留(4 bit)*\/$/;"	m	struct:TCP_Head_t
th_seq	demo10.h	/^    tcp_seq th_seq;     \/* 序列号 *\/$/;"	m	struct:TCP_Head_t
th_sport	demo10.h	/^    u_short th_sport;   \/* 源端口 *\/$/;"	m	struct:TCP_Head_t
th_sum	demo10.h	/^    u_short th_sum;     \/* 校验和 *\/$/;"	m	struct:TCP_Head_t
th_urp	demo10.h	/^    u_short th_urp;     \/* 紧急指针 *\/$/;"	m	struct:TCP_Head_t
th_win	demo10.h	/^    u_short th_win;     \/* 滑动窗口 *\/$/;"	m	struct:TCP_Head_t
tlen	demo7.cpp	/^          u_short tlen;$/;"	m	struct:ip_header	file:
tos	demo3.c	/^    u_char tos:8;$/;"	m	struct:__anon2	file:
tos	demo7.cpp	/^          u_char tos;$/;"	m	struct:ip_header	file:
total_len	demo3.c	/^    int total_len:16;$/;"	m	struct:__anon2	file:
ttl	demo3.c	/^    u_char ttl:8;$/;"	m	struct:__anon2	file:
ttl	demo7.cpp	/^          u_char ttl;$/;"	m	struct:ip_header	file:
type	demo7.cpp	/^    u_short type;$/;"	m	struct:mac_header	file:
udp_header	demo7.cpp	/^        typedef struct udp_header$/;"	s	file:
udp_header	demo7.cpp	/^        }udp_header;$/;"	t	typeref:struct:udp_header	file:
urgentpointer	demo7.cpp	/^           u_short urgentpointer;$/;"	m	struct:tcp_header	file:
ver_ihl	demo7.cpp	/^          u_char ver_ihl;$/;"	m	struct:ip_header	file:
version	demo3.c	/^    int version:4;$/;"	m	struct:__anon2	file:
windowsize	demo7.cpp	/^           u_short windowsize;$/;"	m	struct:tcp_header	file:
